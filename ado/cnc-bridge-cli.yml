# example pipeline for Coverity scans using the Bridge CLI
trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  - group: poc329.coverity.synopsys.com

steps:
- task: JavaToolInstaller@0
  displayName: 'Use Java 17'
  inputs:
    versionSpec: 17
    jdkArchitectureOption: x64
    jdkSourceOption: PreInstalled

- task: Maven@4
  displayName: 'Maven Build'
  inputs:
    options: '-B -DskipTests'

- bash: |
    set -ex
    curl -fLsS -o bridge.zip $BRIDGECLI_LINUX64 && unzip -qo -d $(Agent.TempDirectory) bridge.zip && rm -f bridge.zip
    $(Agent.TempDirectory)/synopsys-bridge --verbose --stage connect \
      coverity.connect.url=$(COVERITY_URL) \
      coverity.connect.user.name=$(COV_USER) \
      coverity.connect.user.password=$(COVERITY_PASSPHRASE) \
      coverity.connect.project.name=$(Build.Repository.Name) \
      coverity.connect.stream.name=$(Build.Repository.Name)-$(Build.SourceBranchName) \
      coverity.connect.policy.view='Outstanding Issues'
  env:
    COV_USER: $(COV_USER)
    COVERITY_PASSPHRASE: $(COVERITY_PASSPHRASE)
  displayName: 'Coverity Full Scan'
  condition: not(eq(variables['Build.Reason'], 'PullRequest'))

- bash: |
    set -ex
    curl -fLsS -o bridge.zip $BRIDGECLI_LINUX64 && unzip -qo -d $(Agent.TempDirectory) bridge.zip && rm -f bridge.zip
    $(Agent.TempDirectory)/synopsys-bridge --verbose --stage connect \
      coverity.connect.url=$(COVERITY_URL) \
      coverity.connect.user.name=$(COV_USER) \
      coverity.connect.user.password=$(COVERITY_PASSPHRASE) \
      coverity.connect.project.name=$(Build.Repository.Name) \
      coverity.connect.stream.name=$(Build.Repository.Name)-$(System.PullRequest.targetBranchName) \
      coverity.automation.prcomment=true \
      azure.organization.name=chuckaude \
      azure.repository.name=$(Build.Repository.Name) \
      azure.project.name=$(Build.Repository.Name) \
      azure.repository.branch.name=$(System.PullRequest.SourceBranch) \
      azure.repository.pull.number=$(System.PullRequest.PullRequestId)
  env:
    COV_USER: $(COV_USER)
    COVERITY_PASSPHRASE: $(COVERITY_PASSPHRASE)
    BRIDGE_AZURE_USER_TOKEN: $(System.AccessToken)
  displayName: 'Coverity PR Scan'
  condition: eq(variables['Build.Reason'], 'PullRequest')

- task: ArchiveFiles@2
  displayName: 'Copy Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    rootFolderOrFile: .bridge
    includeRootFolder: false
    archiveFile: '$(Build.ArtifactStagingDirectory)/bridge-logs.zip'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Log Files'
  condition: succeededOrFailed()
  enabled: false
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'logs'
